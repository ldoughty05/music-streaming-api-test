{
  "name": "music-streaming-api-test",
  "version": "1.0.0",
  "description": "Testing the ability to implement streaming from Soundcloud, Apple Music, etc in my own application.",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "lint:css": "stylelint \"**/*.css\" \"**/*.module.css\" \"!coverage/**\"",
    "lint:js": "eslint --max-warnings 0 ./src",
    "lint": "run-s --continue-on-error lint:**",
    "test-once": "react-scripts test --watchAll=false --coverage",
    "test": "react-scripts test --watchAll --coverage",
    "start": "react-scripts start",
    "build": "react-scripts build",
    "eject": "react-scripts eject"
  },
  "homepage": ".",
  "dependencies": {
    "@reduxjs/toolkit": "^1.8.3",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^14.3.0",
    "classnames": "^2.3.1",
    "npm-run-all": "^4.1.5",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-redux": "^8.0.2",
    "react-router-dom": "^6.3.0",
    "react-scripts": "^5.0.1",
    "workbox-background-sync": "^6.5.3",
    "workbox-broadcast-update": "^6.5.3",
    "workbox-cacheable-response": "^6.5.3",
    "workbox-core": "^6.5.3",
    "workbox-expiration": "^6.5.3",
    "workbox-navigation-preload": "^6.5.3",
    "workbox-precaching": "^6.5.3",
    "workbox-range-requests": "^6.5.3",
    "workbox-routing": "^6.5.3",
    "workbox-strategies": "^6.5.3",
    "workbox-streams": "^6.5.3"
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@unlsoft/eslint-config": "file:../eslint-config",
    "@unlsoft/stylelint-config": "file:../stylelint-config",
    "eslint-plugin-jest-dom": "^4.0.2",
    "stylelint": "^14.9.1"
  },
  "stylelint": {
    "extends": "@unlsoft/stylelint-config"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest",
      "plugin:jest-dom/recommended",
      "plugin:testing-library/react",
      "@unlsoft/eslint-config/react"
    ]
  },
  "jest": {
    "clearMocks": true,
    "collectCoverageFrom": [
      "src/features/**/*.js"
    ],
    "resetMocks": false,
    "restoreMocks": false
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
